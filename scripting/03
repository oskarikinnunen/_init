#sudo apt update
#sudo apt install openssh-server -Y
#sudo systemctl start ssh

#sudo apt update

RED='\033[0;31m'
BLUE='\033[0;34m'
GREEN='\033[0;32m'
LBLUE='\033[1;34m'
WHITE='\033[0m'

CURCOLOR=''

setcolor()
{
	if [ "$1" == "#Deduction" ]; then
		CURCOLOR=$RED
	elif [ "$1" == "#Output" ]; then
		CURCOLOR=$GREEN
	elif [ "$1" == "#Command" ]; then
		CURCOLOR=$BLUE
	fi
}

q_arr=("Get the list of the network interfaces of the machine without displaying any detail for these interfaces. Only the list of names:" #1
	"Identify and display the Ethernet interface characteristics:" #2
	"Identify the MAC address of the Wi-Fi card:" #3
	"Identifiy the default gateway in the routing table" #4
	"Identify the IP address of the DNS that responds to the following url: who.int" #5
	"Get the complete path of the file that contains the IP address of the DNS server you're using" #6
	"Query an external DNS server on the who.int domain name (ie.: google 8.8.8.8)" #7
	"Find the provider of who.int" #8
	"Find the external IP of 42.fr" #9
	"Identify the network devices between your computer and the who.int domain" #10
	"Use the output of the previous command to find the name and IP address of the device that makes the link between you (local network) and the outside world" #11
	"Find the IP that was assigned to you by dhcp server" #12
	"Thanks to the previous question and the reverse DNS find the name of your host" #13
	"What file contains the local DNS entries?" #14
	"Make the intra.42.fr address reroute to 46.19.122.85" #15
)
linux_arr=("In what file can you find the installed version of your Debian?" #1
	"What command can you use to rename your system" #2
	"What file has to be modified to make it permanent?" #3
	"What command gives you the time since your system was last booted?" #4
	"Name the command that determines the state of the SSH service." #5
	"Name the command that reboots the SSH service" #6
	"Figure out the PID of the SSHD service" #7
	"What file contains the RSA keys of systems that are authorized to connect via SSH?" #8
	"What command lets you know who is connected to the System?" #9
	"Name the command that lists the partition tables of drives?" #10
	"Name the command that displays the available space left and used on the system in an humanly understandable way" #11
	"Figure out the exact size of each folder of /var in a humanly understandable way followed by the path of it." #12
	"Name the command that find, in real time, currently running processes" #13
	"Run the 'tail -f /var/log/syslog' command in background" # 14
	"Find the command that kills the background command's process" #15
	"Find the service which makes it possible to run specific tasks following a regular schedule" #16
	"Find the command that allows you to connect via ssh on the VM. (In parallel with the graphic session)" #17
	"Find the command that kills ssh service" #18
	"List all services which are started at boot time and name this kind of services" #19
	"List all existing users on the VM" #20
	"List all real users on the VM" #21
	"Find the command that add a new local user" #22
	"Explain how connect yourself as new user. (With graphic session and ssh session)" #23
	"Find the command that list all packages" #24
)

if [[ "$OSTYPE" == "darwin"* ]]; then
	echo "Running script on OSX"
	pwd=$(pwd)
	foldername=$(basename $pwd)
	echo "running from folder $pwd";
	if [[ "$pwd" == *"init"* ]]; then
		fold="network/*"
	elif [[ "$pwd" == *"scripting"* ]]; then
		fold="../network/*"
	fi
	for f in $fold
	do
		fline=$(head -1 $f)
		setcolor $fline
		echo -e "${CURCOLOR}"
		fname=$(basename $f)
		num=$(echo $fname | sed 's/^0//' )
		#echo "|Q:${q_arr[$num - 1]}"
		echo -e "$fname ($fline) \n|Q:${q_arr[$num - 1]}"
		echo -n "|A:"
		tail -n +2 $f | head -1
		#head -1 $f
		tail -n +3 $f | sed 's/^/|  /'
		if [ "$fline" == "#Command" ]; then
			echo -e "${LBLUE}"
			echo "script output:"
			bash $f
			#$bash $f | sed 's/^/	/'
			echo -e "${CURCOLOR}"
		fi
		echo ""
	done
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
	echo "Running script on linux"
	pwd=$(pwd)
	foldername=$(basename $pwd)
	echo "running from folder $pwd";
	if [[ "$pwd" == *"init"* ]]; then
		fold="system/*"
	elif [[ "$pwd" == *"scripting"* ]]; then
		fold="../system/*"
	fi
	for f in $fold
	do
		fline=$(head -1 $f)
		setcolor $fline
		echo -e "${CURCOLOR}"
		fname=$(basename $f)
		num=$(echo $fname | sed 's/^0//' )
		echo -e "$fname ($fline) \n|Q:${linux_arr[$num - 1]}"
		echo -n "|A:"
		tail -n +2 $f | head -1
		tail -n +3 $f | sed 's/^/|  /'
		if [ "$fline" == "#Command" ] && [ "$fline" != "#CommandNORUN" ]; then
			echo -e "${LBLUE}"
			echo "script output:"
			bash $f
			echo -e "${CURCOLOR}"
		fi
		echo ""
	done
fi
